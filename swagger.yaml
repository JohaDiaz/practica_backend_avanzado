openapi: 3.0.3
info:
  title: NodeApp - API de Nodepop
  description: |
      Nodepop es una API diseñada para gestionar productos, usuarios y etiquetas en una plataforma de comercio. Esta API proporciona operaciones CRUD para productos, soporta manejo de imágenes, aplica filtros y permite consultas por producto y usuario.

      **Características**:  
      - Filtros para buscar productos por nombre, precio y etiquetas.  
      - Paginación y ordenamiento de datos.  
      - Gestión de usuarios con productos asociados.  
      - Permite carga de imágenes de productos.  
    
version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Servidor local
paths:
  /api/products:
    get:
      summary: Recuperar una lista de productos
      description: Recuperar una lista de productos basada en filtros, paginación y criterios de ordenamiento.
      parameters:
        - in: query
          name: tag
          schema:
            type: string
          description: Filtrar productos por etiqueta.
        - in: query
          name: product-name
          schema:
            type: string
          description: Filtrar productos por nombre.
        - in: query
          name: sort
          schema:
            type: string
          description: Campo para ordenar.
        - in: query
          name: page
          schema:
            type: integer
          description: Número de página para la paginación.
        - in: query
          name: limit
          schema:
            type: integer
          description: Número de productos por página.
        - in: query
          name: fields
          schema:
            type: string
          description: Campos a incluir en la respuesta, separados por comas.
      responses:
        '200':
          description: Lista de productos.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
                  totalRecords:
                    type: integer
                    description: Número total de productos.
                  totalPages:
                    type: integer
                    description: Número total de páginas.
                  currentPage:
                    type: integer
                    description: Número de la página actual.
    post:
      summary: Crear un nuevo producto
      description: Agregar un nuevo producto a la base de datos.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product:
                  type: string
                  description: Nombre del producto.
                precio:
                  type: number
                  description: Precio del producto.
                picture:
                  type: string
                  format: binary
                  description: Imagen del producto.
                tags:
                  type: string
                  description: Lista de etiquetas separadas por comas.
      responses:
        '201':
          description: Producto creado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /api/products/{productId}:
    get:
      summary: Recuperar un producto por ID
      description: Obtener los detalles de un producto específico por su ID.
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: string
          description: ID del producto.
      responses:
        '200':
          description: Detalles del producto.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado.
    put:
      summary: Actualizar un producto por ID
      description: Actualizar los detalles de un producto existente.
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: string
          description: ID del producto.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product:
                  type: string
                  description: Nombre actualizado del producto.
                precio:
                  type: number
                  description: Precio actualizado del producto.
                picture:
                  type: string
                  format: binary
                  description: Imagen actualizada del producto.
                tags:
                  type: string
                  description: Lista de etiquetas actualizadas separadas por comas.
      responses:
        '200':
          description: Producto actualizado exitosamente.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Producto no encontrado.
    delete:
      summary: Eliminar un producto por ID
      description: Eliminar un producto de la base de datos utilizando su ID.
      parameters:
        - in: path
          name: productId
          required: true
          schema:
            type: string
          description: ID del producto.
      responses:
        '200':
          description: Producto eliminado exitosamente.
        '404':
          description: Producto no encontrado.
 
components:
  schemas:
    Product:
      type: object
      properties:
        name:
          type: string
          description: Nombre del producto.
        owner:
          type: string
          description: ID del usuario que posee el producto.
        price:
          type: number
          description: Precio del producto.
        image:
          type: string
          description: URL o ruta de la imagen del producto.
        tags:
          type: array
          items:
            type: string
          description: Etiquetas asociadas al producto.
        